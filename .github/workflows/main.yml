# This is a basic workflow to help you get started with Actions

name: "Master Build Test"

# Controls when the action will run. Triggers the workflow on push or pull request events
on:
  pull_request: {branches: master}
  push: {branches: master}

jobs:
  build:
    name: Test compile for ${{ matrix.arduino-boards-fqbn }} with ${{ matrix.log-options }} ${{ matrix.other-options }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        arduino-boards-fqbn: 
          - arduino:avr:mega
          - arduino:avr:leonardo
          - arduino:avr:nano
          - arduino:avr:uno
        log-options: [-DDEBUG -DINFO]
        other-options: [-DTEST -DDUMMY]
        ccov-options: [-fprofile-arcs -ftest-coverage -DCODECOV]
        include-paths: [-I./src/ -I./test]
        sources: [./examples/dBuLevel.cpp ./src/LCD_VU.cpp ./test/dummy.cpp]
        os: [ubuntu-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Checkout LiquidCrystal_I2C library
      uses: actions/checkout@master
      with:
        repository: johnrickman/LiquidCrystal_I2C
        path: CustomLiquidCrystal_I2C

    - name: Compile
      uses: ArminJo/arduino-test-compile@master
      with:
        arduino-board-fqbn: ${{ matrix.arduino-boards-fqbn }}
        build-properties: '{ "All": "${{ matrix.log-options }} ${{ matrix.other-options }}"}'

    - name: Generate code coverage
      run: |
        mv ./examples/dBuLevel.ino ./examples/dBuLevel.cpp 
        g++  ${{ matrix.ccov-options }} ${{ matrix.log-options }} ${{ matrix.other-optons }} ${{ matrix.include-paths }} ${{ matrix.sources }} -o program
        ./program
        
    - name: Codecov Bash Uploader
      run: bash <(curl -s https://codecov.io/bash) -t ${{ Secrets.CODECOV_TOKEN }}
