# This is a basic workflow to help you get started with Actions

name: "Arduino Build Test"

# Controls when the action will run. Triggers the workflow on push or pull request events
on: [ push, pull_request ]

jobs:
  build:
    name: Test compile for ${{ matrix.arduino-boards-fqbn }} with ${{ matrix.log-options }} ${{ matrix.other-options }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        arduino-boards-fqbn: 
          - arduino:avr:uno
          #- arduino:avr:leonardo
          #- arduino:avr:nano
        log-options: [-DDEBUG, -DINFO]
        other-options: [-DTEST, -DDUMMY, --coverage -g -O0]
        os: [ubuntu-latest]

    env:
      OS: ${{ matrix.os }}
      PYTHON: '3.8'

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Checkout LiquidCrystal_I2C library
      uses: actions/checkout@v2
      with:
        repository: johnrickman/LiquidCrystal_I2C
        ref: master
        path: CustomLiquidCrystal_I2C

#    - name: Install Taskfile
#      uses: Arduino/actions/setup-taskfile@master
#      with:
#        repo-token: ${{ secrets.GITHUB_TOKEN }}

#    - name: Initialize Task
#      run: task --init

#    - name: Check the code is good
#      run: task check

    - name: Compile
      uses: ArminJo/arduino-test-compile@master
      with:
        arduino-board-fqbn: ${{ matrix.arduino-boards-fqbn }}
        build-properties: '{ "All": "${{ matrix.log-options }} ${{  matrix.other-options }}" }'

#    - name: Build the CLI
#      run: task build

#    - name: Run unit tests
#      run: task test-unit

#    - name: Install Python
#      uses: actions/setup-python@v1
#      with:
#        python-version: '3.8'
#        architecture: 'x64'

#    - name: Run integration tests
#      run: |
#        pip install -r test/requirements.txt
#        task test-integration

    - name: Send unit tests coverage to Codecov
      uses: codecov/codecov-action@master
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: ./coverage_unit.txt
        flags: unit

    #- name: Setup Python
    #  uses: actions/setup-python@master
    #  with:
    #    python-version: 3.8

    #- name: Generate coverage report
    #  run: |
    #    pip install pytest
    #    pip install pytest-cov
    #    pytest --cov=./ --cov-report=xml

    #- name: Upload coverage to Codecov
    #  uses: codecov/codecov-action@v1
    #  with:        
    #    file: ./coverage.xml
    #    files: ./coverage1.xml,./coverage2.xml
    #    directory: ./coverage/reports/
    #    flags: unittests
    #    env_vars: OS,PYTHON
    #    name: codecov-umbrella
    #    fail_ci_if_error: true
    #    path_to_write_report: ./coverage/codecov_report.gz

  #  - name: Codecov Bash Uploader
  #    run: |
  #      bash <(curl -s https://codecov.io/bash) -t ${{ Secrets.CODECOV_TOKEN }}
